---
layout: default
title: "GENIVI SOTA Project — Software, Over the Air"
---
:icons: font

===============================================================================
[quote, Jane Austen,"Pride, Prejudice & Software Development"]
It is a truth universally acknowledged, that a software distribution in possession of many component parts must be in want of a good update manager.
===============================================================================

= GENIVI SOTA Project — Software, Over the Air

[.text-center]
.1. Updating software is important.
****
It's even more important when it's software running on 3 metric tons of fast-moving steel.
****

[.text-center]
.2. Getting your users to update software is hard.
****
It's even harder when your users are running software on a thing they don't really think of as a computer.
****

This project was conceived with those two ideas in mind. If you have a million vehicles in the field in need of an update, asking every vehicle owner to download an update on a USB stick and plug it in to install just isn't going to fly; you'd be lucky to see even 5% adoption after 6 months.

SOTA is a complete suite for uploading, managing, queueing, transmitting, validating, and deploying software updates remotely to a fleet of vehicles. It includes both a server and a client component, integrated with the rest of the GENIVI system. It's based on open standards, and designed from the ground up to be fast, secure, stable, and scalable. It's also pluggable: SOTA can integrate with existing logistics and fleet management software as part of a total security solution.

Want to know more? Why not check out the link:./dev/architecture.html[Architecture page] for an introduction to how it all works? Or if you'd like to just jump in and get your hands dirty, https://github.com/PDXostc/rvi_sota_server[check out the project from GitHub]. You can link:./doc/building-installing.html[build and run it locally] with sbt, or you can link:./doc/deployment-with-docker-launcher.html[launch it quickly and easily with Docker images].




